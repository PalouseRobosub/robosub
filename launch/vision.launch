<?xml version="1.0"?>

<launch>

    <arg name="doImShow" default="false"/>
    <arg name="leftImage" default="camera/left/undistorted"/>
    <arg name="rightImage" default="camera/right/undistorted"/>

    <arg name="simulated" default="false"/>
    <arg name="calibFile" default="$(find robosub)/src/vision/calib/stereo_out_camera_data.xml"/>

    <!--Set /visualize_thrusters to false if being simulated.
        This prevents visualization from messing with color detection-->
    <rosparam param="/visualize_thrusters" subst_value="True" if="$(arg simulated)">false</rosparam>

    <!-- Start gate vision detection -->
    <node pkg="robosub" type="vision" name="gate_vision" args="$(find robosub)/$(arg calibFile)" output="screen" required="false">
        <remap from="vision/output_default" to="vision/start_gate"/>
        <remap from="camera/left/undistorted" to="$(arg leftImage)"/>
        <remap from="camera/right/undistorted" to="$(arg rightImage)"/>
        <rosparam command="load" ns="processing" file="$(find robosub)/param/vision/startGateVis.yaml" unless="$(arg simulated)"/>
        <rosparam command="load" ns="processing" file="$(find robosub)/param/vision/startGateVisSim.yaml" if="$(arg simulated)"/>
        <param name="processing/doImShow" value="$(arg doImShow)"/>
        <param name="nLargest" value="2"/>
    </node>

    <!-- Red buoy vision detection -->
    <node pkg="robosub" type="vision" name="red_vision" args="$(find robosub)/$(arg calibFile)" output="screen" required="false">
        <remap from="vision/output_default" to="vision/buoys/red"/>
        <remap from="camera/left/undistorted" to="$(arg leftImage)"/>
        <remap from="camera/right/undistorted" to="$(arg rightImage)"/>
        <rosparam command="load" ns="processing" file="$(find robosub)/param/vision/redVis.yaml" unless="$(arg simulated)"/>
        <rosparam command="load" ns="processing" file="$(find robosub)/param/vision/redVisSim.yaml" if="$(arg simulated)"/>
        <param name="processing/doImShow" value="$(arg doImShow)"/>
        <param name="nLargest" value="1"/>
    </node>
    
    <!-- Green buoy vision detection -->
    <node pkg="robosub" type="vision" name="green_vision" args="$(find robosub)/$(arg calibFile)"  output="screen" required="false">
        <remap from="vision/output_default" to="vision/buoys/green"/>
        <remap from="camera/left/undistorted" to="$(arg leftImage)"/>
        <remap from="camera/right/undistorted" to="$(arg rightImage)"/>
        <rosparam command="load" ns="processing" file="$(find robosub)/param/vision/greenVis.yaml" unless="$(arg simulated)"/>
        <rosparam command="load" ns="processing" file="$(find robosub)/param/vision/greenVisSim.yaml" if="$(arg simulated)"/>
        <param name="processing/doImShow" value="$(arg doImShow)"/>
        <param name="nLargest" value="1"/>
    </node>

    <!-- Yellow buoy vision detection -->
    <node pkg="robosub" type="vision" name="yellow_vision" args="$(find robosub)/$(arg calibFile)" output="screen" required="false">
        <remap from="vision/output_default" to="vision/buoys/yellow"/>
        <remap from="camera/left/undistorted" to="$(arg leftImage)"/>
        <remap from="camera/right/undistorted" to="$(arg rightImage)"/>
        <rosparam command="load" ns="processing" file="$(find robosub)/param/vision/yellowVis.yaml" unless="$(arg simulated)"/>
        <rosparam command="load" ns="processing" file="$(find robosub)/param/vision/yellowVisSim.yaml" if="$(arg simulated)"/>
        <param name="processing/doImShow" value="$(arg doImShow)"/>
        <param name="nLargest" value="1"/>
    </node>

    <!-- Navigate Pass vision detection -->
    <node pkg="robosub" type="vision" name="navigate_vision" args="$(find robosub)/$(arg calibFile)" output="screen" required="false">
        <remap from="vision/output_default" to="vision/navigate_pass"/>
        <remap from="camera/left/undistorted" to="$(arg leftImage)"/>
        <remap from="camera/right/undistorted" to="$(arg rightImage)"/>
        <rosparam command="load" ns="processing" file="$(find robosub)/param/vision/yellowVis.yaml" unless="$(arg simulated)"/>
        <rosparam command="load" ns="processing" file="$(find robosub)/param/vision/yellowVisSim.yaml" if="$(arg simulated)"/>
        <param name="processing/doImShow" value="$(arg doImShow)"/>
        <param name="nLargest" value="1"/>
    </node>
    
    <!-- Marker Bin vision detection -->
    <node pkg="robosub" type="vision" name="bin_vision" args="$(find robosub)/$(arg calibFile)" output="screen" required="false">
        <remap from="vision/output_default" to="vision/bins"/>
        <remap from="camera/left/undistorted" to="$(arg leftImage)"/>
        <remap from="camera/right/undistorted" to="$(arg rightImage)"/>
        <rosparam command="load" ns="processing" file="$(find robosub)/param/vision/binVis.yaml" unless="$(arg simulated)"/>
        <rosparam command="load" ns="processing" file="$(find robosub)/param/vision/binVisSim.yaml" if="$(arg simulated)"/>
        <param name="processing/doImShow" value="$(arg doImShow)"/>
        <param name="nLargest" value="1"/>
    </node>

    <!-- Torpedo target vision detection -->
    <node pkg="robosub" type="vision" name="torpedo_vision" args="$(find robosub)/$(arg calibFile)" output="screen" required="false">
        <remap from="vision/output_default" to="vision/torpedo_target"/>
        <remap from="camera/left/undistorted" to="$(arg leftImage)"/>
        <remap from="camera/right/undistorted" to="$(arg rightImage)"/>
        <rosparam command="load" ns="processing" file="$(find robosub)/param/vision/torpedoVis.yaml" unless="$(arg simulated)"/>
        <rosparam command="load" ns="processing" file="$(find robosub)/param/vision/torpedoVisSim.yaml" if="$(arg simulated)"/>
        <param name="processing/doImShow" value="$(arg doImShow)"/>
        <param name="nLargest" value="1"/>
    </node>

    <!-- Octagon vision detection -->
    <node pkg="robosub" type="vision" name="octagon_vision" args="$(find robosub)/$(arg calibFile)" output="screen" required="false">
        <remap from="vision/output_default" to="vision/octagon"/>
        <remap from="camera/left/undistorted" to="$(arg leftImage)"/>
        <remap from="camera/right/undistorted" to="$(arg rightImage)"/>
        <rosparam command="load" ns="processing" file="$(find robosub)/param/vision/octagonVis.yaml" unless="$(arg simulated)"/>
        <rosparam command="load" ns="processing" file="$(find robosub)/param/vision/octagonVisSim.yaml" if="$(arg simulated)"/>
        <param name="processing/doImShow" value="$(arg doImShow)"/>
        <param name="nLargest" value="1"/>
    </node>

</launch>
