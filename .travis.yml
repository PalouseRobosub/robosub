language: generic
sudo: required
dist: trusty
group: deprecated-2017Q2

#slack integration
notifications:
  email: false
  slack:
    rooms:
      - secure: "1UGbBfvsSaV3iSfx0XlZsidB0F4M345jj2qFRpd78DUYs5Ozs3JNLglbFnzNRhTEskvD8D+ZTuGE5iu9Je2yX7s+etb6wWpCVBHAmU+QQWkWRGwk0jIeeUpIhmA9ekl0f+a5pfAAVNYqr6OHoO7ByYoqFcw54YT1U02ybtpWceMto0ZWwgzvyKGJHlow26qaPFnR0r7XLmViHo/SkfCnM9I4Wo992AV9K5FYpRmS6v44gbkH+jx/WmL973VJcijUqINpu5iUJEzosEhkrBnvYP6MBFbpFI6uE7U0BTdJsUHHpvhdexKuEBtPrMDe+SXKgsRNhN3UPVXx7Cq7GGu7PMlTe4Q7NuNoBxDqXcSScoDTDKBWGzAi7yhYfh0IiWzGMRNkHfk1pu35ShKUmo53bq2TDNpeBg+hQFqzBJgPkqrWfDTltTn4YGPiPiN9Eesg1q2MYeFitJYVz+95nX3ea7mCB0kHaSwFNXjNsb/ZRiV6eWnQFhoCb3Lz0j6EjvhB/UeGldALKiLJWD98xUf5y1H4k9MDqkRiigAaFK12RhpYoKmc6xRKKLsFGwkXhr70PVprFf3b/xLrNxXv7JZdMLlRHyDZzatJ1AO774B7LebwubOQ3bYl//9YLAfOl2gPzePFYIIcnCjjd+QWlbgHaz5HGG4A4Vcnsr5EDKI5QCI="
    on_success: always
    on_failure: always

#whitelist for branches to build
branches:
  only:
    - master
    - dev
    - travisci

#install dependencies
addons:
  apt:
    sources:
    - sourceline: 'deb http://packages.ros.org/ros/ubuntu trusty main'
      key_url: 'https://raw.githubusercontent.com/ros/rosdistro/master/ros.key '
    - sourceline: 'deb http://robosub.eecs.wsu.edu/repo/ /'
      key_url: 'http://robosub.eecs.wsu.edu/repo/repository_key'
    - sourceline: 'deb http://packages.osrfoundation.org/gazebo/ubuntu trusty main'
      key_url: 'http://packages.osrfoundation.org/gazebo.key'
    packages:
    - robosub

#most dependencies are installed from packages, install just does simulator if needed
install:
  - if [ "$TEST" == "true" ] ; then sudo apt-get install robosub-simulator; fi

#build the project
before_script:
  - source /opt/ros/indigo/setup.bash
  - cd ../ && mkdir src && mv robosub src/ && cd src
  - catkin_init_workspace
  - cd ..
  - if [ "$TEST" == "true" ] ; then cd src/; git clone https://github.com/PalouseRobosub/robosub_simulator.git; cd ../; fi

script:
  - if [ "$BUILD" == "true" ] ; then catkin_make; fi
  - if [ "$TEST" == "true" ] ; then catkin_make; source devel/setup.bash; catkin_make run_tests; catkin_test_results; fi
  - if [ "$LINT" == "true" ] ; then catkin_make roslint; fi

matrix:
  fast_finish: true
  include:
    - env: #does just the build work?
      - BUILD=true
    - env: #does the linter pass?
      - LINT=true
    - env: #do all tests pass?
      - TEST=true

